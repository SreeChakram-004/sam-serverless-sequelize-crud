service: sam-sequelize-crud-serverless
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region,'us-west-2'}
  memorySize: 128
  logRetentionInDays: 30 #logs will be cleared after 30 days
  # iamRoleStatements:
  #   - Effect: "Allow"
  #     Action:
  #       - ec2:CreateNetworkInterface
  #       - ec2:DescribeNetworkInterfaces
  #       - ec2:DeleteNetworkInterface
  #     Resource:
  #       - "*"

functions:
  app:
    handler: handler.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

# functions:
#   getProducts:
#     handler: routes/productRouter.all
#     events:
#       - httpApi: 
#           path: get/products
#           method: get

#   postProduct:
#     handler: routes/productRouter.add
#     events:
#       - httpApi:
#           path: /add/product
#           method: post
        
#   updateProduct:
#     handler: routes/productRouter.update
#       - httpApi: 
#         path: /update/product/{id}
#         method: post

  # deleteProduct:
  #   handler: routes/productRouter.delete
  #   events:
  #     - httpApi:
  #         path: /delete/product/{id}
  #         method: post
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - httpApi:
#          path: /users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2
# you can add CloudFormation resource templates here
Resources:
  MyLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handler.handler
      Runtime: nodejs18.x
      FunctionName: sam-sequelize-crud-serverless
      MemorySize: 128
      Timeout: 30

  MyRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: sam-sequelize-crud-serverless-rest-api
      Description: My REST API

  MyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt MyRestApi.RootResourceId
      PathPart: my-resource

  MyGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref MyRestApi
      ResourceId: !Ref MyResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyLambdaFunction.Arn}/invocations

  MyDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: [MyGetMethod]
    Properties:
      RestApiId: !Ref MyRestApi
      StageName: dev

#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
